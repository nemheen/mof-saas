"""Create users table

Revision ID: 9757feddbb84
Revises: 
Create Date: 2025-08-22 18:37:27.249613

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9757feddbb84'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('role', sa.String(length=32), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.drop_table('geometric')
    op.drop_table('adsorption')
    op.drop_table('topology')
    op.alter_column('coremof', 'filename',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('coremof', 'Has_OMS',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
    op.create_index(op.f('ix_coremof_filename'), 'coremof', ['filename'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_coremof_filename'), table_name='coremof')
    op.alter_column('coremof', 'Has_OMS',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
    op.alter_column('coremof', 'filename',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.create_table('topology',
    sa.Column('filename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Crystalnet', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('likely_topology', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('adsorption',
    sa.Column('filename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('process', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('mmol/g_uptake', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('mmol/g_working_capacity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('v/v_uptake', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('v/v_working_capacity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('wt%_uptake', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('wt%_working_capacity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('selectivity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('purity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ssp', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('afm', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('suffix', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('geometric',
    sa.Column('filename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('UC_volume', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Density', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ASA', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('vASA', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gASA', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('NASA', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gNASA', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('vNASA', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('AVA', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('AVAf', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('AVAg', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('NAVA', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('NAVAf', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('NAVAg', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('POAVA', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('POAVAf', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('POAVAg', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('NPOAVA', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('NPOAVAf', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('NPOAVAg', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Di', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Df', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Dif', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ARC-MOF', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('DB_num', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('order_geo', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('bool_geo', sa.BOOLEAN(), autoincrement=False, nullable=True)
    )
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
